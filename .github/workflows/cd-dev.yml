name: Canary deployment

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  publish-canary:
    name: 'install, build, publish canary'
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2-beta

    - uses: actions/setup-node@v1
      with:
        registry-url: https://registry.npmjs.org/
        node-verion: '12.x'

    - name: Cache npm cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-v1-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-v1-

    - name: Restore node_modules
      id: node-modules-cache
      uses: actions/cache@v1
      with:
        path: node_modules
        key: v1-node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm run build

    - name: Compute canary version
      id: compute-version
      env:
        # TODO - concat check-suite run id when added by Github to prevent
        # conflict when re-running workflow on the same commit
        ID: ${{ github.sha }}
      run: |
        CURRENT_VERSION=$(cat package.json | jq -r '.version')
        CANARY_VERSION=$CURRENT_VERSION-canary-$ID

        echo "::set-output name=version::$CANARY_VERSION"

    - name: Bumb version
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        VERSION: ${{ steps.compute-version.outputs.version }}
      run: npm version --no-git-tag-version $VERSION

    - name: Publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        npm publish --access public --tag canary
