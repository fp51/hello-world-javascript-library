name: Pull request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  assignee:
    name: 'check assignee'
    runs-on: ubuntu-18.04

    steps:
    - name: Check if there is at least one assignee
      uses: actions/github-script@0.4.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: pull } = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number,
          });

          if (pull.assignees.length > 0) {
            return;
          }

          throw new Error('Should have at least one assignee');

  version-labels:
    name: 'check version label'
    runs-on: ubuntu-18.04

    steps:
    - name: Check if version label is present
      uses: actions/github-script@0.4.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const versionLabels = [
            'no-release',
            'patch',
            'minor',
            'major',
          ];

          const { data: labels } = await github.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            per_page: 100,
          });

          const versionLabelsPresent = labels
            .filter(label => versionLabels.includes(label.name))

          if (versionLabelsPresent.length === 1) {
            return;
          }

          console.log(`::debug ::${versionLabelsPresent.length} matching labels`);

          throw new Error('Should have one and only one of no-release, patch, minor, major labels');

  changelog:
    name: 'check changelog change'
    runs-on: ubuntu-18.04

    steps:
    - name: Fail if no changelog change when needed
      uses: actions/github-script@0.4.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const labelsWhereChangelogChangeIsRequired = [
            'patch',
            'minor',
            'major',
          ];

          const { data: labels } = await github.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            per_page: 100,
          });

          const matchingLabels = labels
            .filter(label => labelsWhereChangelogChangeIsRequired.includes(label.name))

          if (matchingLabels.length === 0) {
            console.log('::debug ::No label requiring changelog change. Nothing to do')
            return;
          }

          const { data: files } = await github.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number,
            per_page: 100,
          });

          const fileNotDeletedNames = files
            .filter(file => file.status === 'added' || file.status === 'modified')
            .map(file => file.filename)

          if (!fileNotDeletedNames.includes('CHANGELOG.md')) {
            throw new Error('CHANGELOG.md Unreleased section shoud have line additions when PR is not a no-release')
          }
